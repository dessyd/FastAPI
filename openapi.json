{
  "components": {
    "schemas": {
      "Body_login_login_post": {
        "properties": {
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          },
          "grant_type": {
            "pattern": "password",
            "title": "Grant Type",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "default": "",
            "title": "Scope",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_login_post",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "Post": {
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "owner": {
            "$ref": "#/components/schemas/UserOut"
          },
          "owner_id": {
            "title": "Owner Id",
            "type": "integer"
          },
          "published": {
            "default": true,
            "title": "Published",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "content",
          "id",
          "created_at",
          "owner_id",
          "owner"
        ],
        "title": "Post",
        "type": "object"
      },
      "PostCreate": {
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          },
          "published": {
            "default": true,
            "title": "Published",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "content"
        ],
        "title": "PostCreate",
        "type": "object"
      },
      "PostOut": {
        "properties": {
          "Post": {
            "$ref": "#/components/schemas/Post"
          },
          "votes": {
            "title": "Votes",
            "type": "integer"
          }
        },
        "required": [
          "Post",
          "votes"
        ],
        "title": "PostOut",
        "type": "object"
      },
      "PostUpdate": {
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          },
          "published": {
            "default": true,
            "title": "Published",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "content"
        ],
        "title": "PostUpdate",
        "type": "object"
      },
      "Token": {
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "token_type": {
            "title": "Token Type",
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token",
        "type": "object"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate",
        "type": "object"
      },
      "UserOut": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        },
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "UserOut",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      },
      "Vote": {
        "properties": {
          "dir": {
            "maximum": 1.0,
            "title": "Dir",
            "type": "integer"
          },
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          }
        },
        "required": [
          "post_id",
          "dir"
        ],
        "title": "Vote",
        "type": "object"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "login"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dom.do@x-force.example.com",
      "name": "Domenico",
      "url": "http://x-force.example.com/contact/"
    },
    "description": "\nFastAPI tutorial API helps you do awesome stuff. \ud83d\ude80\n\n## Posts\n\nYou can **read, create, update  and delete posts**.\n\n## Users\n\nYou will be able to:\n\n* **Create users** (_implemented_).\n* **Read users** (_implemented_).\n\n## Authentication\n\nThis is the main login module\n\n## Votes\n\nHere you can cast a vote for a post\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "http://example.com/terms/",
    "title": "FastAPI tutorial",
    "version": "0.0.1"
  },
  "openapi": "3.0.2",
  "paths": {
    "/": {
      "get": {
        "operationId": "root__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Root"
      }
    },
    "/login": {
      "post": {
        "operationId": "login_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/posts/": {
      "get": {
        "operationId": "get_posts_posts__get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 10,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "default": 0,
              "title": "Skip",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "default": "",
              "title": "Search",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PostOut"
                  },
                  "title": "Response Get Posts Posts  Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Posts",
        "tags": [
          "Posts"
        ]
      },
      "post": {
        "operationId": "create_post_posts__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Create Post",
        "tags": [
          "Posts"
        ]
      }
    },
    "/posts/{id}": {
      "delete": {
        "operationId": "delete_post_posts__id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Delete Post",
        "tags": [
          "Posts"
        ]
      },
      "get": {
        "operationId": "get_post_posts__id__get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Post",
        "tags": [
          "Posts"
        ]
      },
      "put": {
        "operationId": "update_post_posts__id__put",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Post",
        "tags": [
          "Posts"
        ]
      }
    },
    "/users/": {
      "post": {
        "operationId": "create_user_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create User",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "get_user_users__id__get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get User",
        "tags": [
          "Users"
        ]
      }
    },
    "/votes/": {
      "post": {
        "operationId": "cast_vote_votes__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Cast Vote",
        "tags": [
          "Votes"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "Operations with users. The **login** logic is also here.",
      "name": "Users"
    },
    {
      "description": "Manage posts. So _fancy_ they have their own docs.",
      "externalDocs": {
        "description": "Posts external docs",
        "url": "https://fastapi.tiangolo.com/"
      },
      "name": "Posts"
    }
  ]
}
